AWSTemplateFormatVersion: 2010-09-09
Description: Template of an EC2 instance in a VPC(subnet,route table etc) reachable by icmp
Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Description: VPC where all our resources will be created
    Properties:
      CidrBlock: 172.32.0.0/16
      Tags:
        - Key: Name
          Value: TemplateVPC
  MySubnet:
    Type: AWS::EC2::Subnet
    Description: This is the public subnet inside the VPC where we'll launch the EC2 instance
    Properties:
      CidrBlock: 172.32.0.0/20
      MapPublicIpOnLaunch: True
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: TemplatePublicSubnet
  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Description: This is for the VPC, it is used as the single point of entry to your VPC. Here, it is being created, we will attach it to the VPC directly below.
    Properties:
      Tags:
        - Key: Name
          Value: VPC Internet Gateway
  MyVPCInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Description: This attaches the InternetGateway we created above to the VPC.
    Properties:
      InternetGatewayId: !Ref MyInternetGateway
      VpcId: !Ref MyVPC
  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Description: All this resource does is create the Route Table, we still have to include the route and that is down directly below
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: MyRoutetable
  MyRoute:
    Type: AWS::EC2::Route
    Description: This specifies the actual route that we want the InternetGateway to have. Note, private subnets don't have routes or route tables.
    DependsOn:
      - MyVPCInternetGatewayAttachment
    Properties:
      RouteTableId: !Ref MyRouteTable
      GatewayId: !Ref MyInternetGateway
      DestinationCidrBlock: 0.0.0.0/0
  MySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Description: The Route table is already associated to the VPC but it's not associated to the Subnet.
    Properties:
      RouteTableId: !Ref MyRouteTable
      SubnetId: !Ref MySubnet
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Description: Now that all the necessary parameters have been created, we can launch our EC2 instance into the Public subnet.
    DependsOn:
      - MyRoute
      - MySubnetRouteTableAssociation
    Properties:
      ImageId: ami-0a8dc52684ee2fee2
      InstanceType: t2.micro
      SubnetId: !Ref MySubnet
